apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: hello-maven-pipeline
  namespace: cicd-test-yy
parameters:
- name: GIT_SOURCE_URL
  description: The source URL for the application
  displayName: Source URL
  required: true
  value: https://github.com/ykaj9758/ping
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: {}
  output: {}
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    type: None
  strategy:
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        try {
        timeout(time: 20, unit: 'MINUTES') {
                def GIT_SOURCE_URL="https://github.com/ykaj9758/ping"
                def PROJECT_NAME="cicd-test-yy"
                def APP_NAME="hello"
                def IMAGE_BUILDER="jboss-webserver30-tomcat8-openshift:1.3"

          node ('maven'){
                  stage('maven version') {
                     sh "mvn --version"
                  }

                  stage ('git Checkout')
                  {
                  git url: "${GIT_SOURCE_URL}"
                  }

                  stage("Build WAR") {
                    sh "mvn clean package"
                    stash name:"war", includes:"target/ROOT.war"
                  }

                }

          node {
                         
                 stage("login project ${PROJECT_NAME}") {
                  sh "oc project ${PROJECT_NAME}"
                  }
                
                stage("Build Image") {
                  unstash name:"war"
                  sh "oc new-build ${IMAGE_BUILDER} --name=${APP_NAME} --binary=true"
                  sh "oc start-build ${APP_NAME} --from-file=target/ROOT.war --follow=true --wait=true"
                  
                  }
                  
                stage("Deploy app") {
                  sh "oc new-app ${APP_NAME}"
                  sh "oc expose svc/${APP_NAME}"
                  }
                 
              }
                
            }
        }
        
        catch (err) {
             echo "in catch block"
             echo "Caught: ${err}"
             currentBuild.result = 'FAILURE'
             throw err
          }

       
    type: JenkinsPipeline
status:
  lastVersion: 1
